{"version":3,"sources":["logo.svg","components/Value.js","components/Clock.js","services/converters.js","components/Temperature.js","components/Waves.js","components/Wind.js","components/Tides.js","components/Daylength.js","components/location/Form.js","components/location/LocationChooser.js","services/mock/astronomy.js","services/mock/weather.js","services/mock/tide.js","services/api.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Value","props","style","width","fontSize","textAlign","fontWeight","label","value","verticalAlign","unit","Clock","state","date","Date","this","timerID","setInterval","tick","clearInterval","setState","toLocaleTimeString","timeStyle","React","Component","toFahrenheit","celcius","Math","round","toKnots","metersPerSecond","Temperature","className","airTemperature","Waves","waveDirection","waveHeight","wavePeriod","Wind","windDirection","windSpeed","gust","Tides","waterTemperature","Daylength","sunrise","sunset","Form","input","handleSubmit","e","preventDefault","onSubmit","prevState","handleChange","target","inputStyle","backgroundColor","color","border","borderRadius","padding","margin","boxSizing","buttonStyle","textDecoration","display","onChange","type","LocationChooser","useState","location","setLocation","useEffect","onLocationChange","mockAstronomy","mockWeather","mockTide","fetchLatLong","a","encodedLocation","encodeURIComponent","fetch","process","response","json","results","geometry","fetchAstronomy","lat","long","fetchTide","now","fetchWeather","hours","App","astronomy","setAstronomy","weather","setWeather","tide","setTide","handleLocationChange","toISOString","updateWeather","latLong","lng","days","extremas","humidity","cloudCover","precipitation","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.024f18c5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\n\nconst Value = props => {\n\n  const container = {\n    width: '200px'\n  }\n\n  const label = {\n    fontSize: '12px',\n    textAlign: 'left',\n    fontWeight: 'bold'\n  }\n\n  const value = {\n    fontSize: '48px',\n    textAlign: 'left'\n  }\n\n  const unit = {\n    fontSize: '12px',\n    fontWeight: 'bold',\n    verticalAlign: 'middle'\n  }\n\n  return (\n    <div style={container}>\n      <div style={label}>{props.label}</div>\n      <div style={value}>{props.value}<span style={unit}>{props.unit}</span></div>\n    </div>\n  );\n}\n\nexport default Value;\n","import React from 'react';\nimport Value from './Value'\n\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {date: new Date()};\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(\n      () => this.tick(),\n      1000\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      date: new Date()\n    });\n  }\n\n  render() {\n    return (\n      <Value label={'Time'} value={this.state.date.toLocaleTimeString('en-US', { timeStyle: 'short' })}/>\n    );\n  }\n}\n\nexport default Clock;\n","export const toFahrenheit = (celcius) => {\n  return Math.round(celcius * 9 / 5 + 32);\n}\n\nexport const toKnots = (metersPerSecond) => {\n  return metersPerSecond * 1.9438444924406\n}\n","import React from 'react';\nimport Value from './Value.js'\nimport { toFahrenheit } from '../services/converters.js'\n\nconst Temperature = props => {\n  return (\n    <div className=\"temperature\">\n      <Value label={'Air Temperature'} value={`${toFahrenheit(props.airTemperature)}`} unit={'°F'}/>\n    </div>\n  );\n}\n\nexport default Temperature;\n","import React from 'react';\nimport Value from './Value.js'\n\nconst Waves = props => {\n  return (\n    <div className=\"waves\">\n      <Value label={'Wave Direction'} value={Math.round(props.waveDirection)} unit={'°'}/>\n      <Value label={'Wave Height'} value={props.waveHeight} unit={'meters'}/>\n      <Value label={'Wave Period'} value={Math.round(props.wavePeriod)} unit={'seconds'}/>\n    </div>\n  );\n}\n\nexport default Waves;\n","import React from 'react';\nimport Value from './Value.js'\nimport { toKnots } from '../services/converters.js'\n\nconst Wind = props => {\n  return (\n    <div className=\"wind\">\n      <Value label={'Wind Direction'} value={Math.round(toKnots(props.windDirection))} unit={'°'}/>\n      <Value label={'Wind Speed'} value={Math.round(toKnots(props.windSpeed))} unit={'knots'}/>\n      <Value label={'Gusts'} value={Math.round(toKnots(props.gust))} unit={'knots'}/>\n    </div>\n  );\n}\n\nexport default Wind;\n","import React from 'react';\nimport Value from './Value.js'\nimport { toFahrenheit } from '../services/converters.js'\n\nconst Tides = props => {\n  return (\n    <div className=\"tides\">\n      <Value label={'Water Temperature'} value={`${toFahrenheit(props.waterTemperature)}`} unit={'°F'}/>\n      <Value label={'High Tide'} value={'0'}/>\n      <Value label={'Low Tide'} value={'0'}/>\n    </div>\n  );\n}\n\nexport default Tides;\n","import React from 'react';\nimport Value from './Value.js'\n\nconst Daylength = props => {\n  const sunrise = new Date(props.sunrise).toLocaleTimeString('en-US', { timeStyle: 'short' })\n  const sunset = new Date(props.sunset).toLocaleTimeString('en-US', { timeStyle: 'short' })\n  return (\n    <div className=\"daylength\">\n      <Value label={'Sunrise'} value={sunrise}/>\n      <Value label={'Sunset'} value={sunset}/>\n    </div>\n  );\n}\n\nexport default Daylength;\n","import React, {Component} from \"react\";\n\nclass Form extends Component {\n  state = {\n    input: this.props.input\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state.input);\n    this.setState(prevState => ({\n      input: \"\"\n    }));\n  };\n\n  handleChange = e => {\n    const input = e.target.value;\n    this.setState(prevState => ({\n      input\n    }));\n  };\n\n  inputStyle = {\n    backgroundColor: '#c06c84',\n    color: 'white',\n    border: 'none',\n    borderRadius: '30px',\n    padding: '12px 20px',\n    margin: '8px 0',\n    boxSizing: 'border-box',\n    fontSize: '20px'\n  }\n\n  buttonStyle = {\n    borderRadius: '50%',\n    backgroundColor: '#c06c84',\n    border: 'none',\n    color: 'white',\n    padding: '20px',\n    textAlign: 'center',\n    textDecoration: 'none',\n    display: 'inline-block',\n    fontSize: '16px',\n    margin: '4px 2px'\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          style={this.inputStyle}\n          onChange={this.handleChange}\n          value={this.state.input}\n          type=\"text\"\n        />\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React, {useState, useEffect} from 'react';\nimport Form from './Form.js'\n\nconst LocationChooser = (props) => {\n\n  const [location, setLocation] = useState(\"Rockaway Beach, NY\");\n\n  useEffect(() => {\n    props.onLocationChange(location);\n  });\n\n  const handleSubmit = location => {\n    if (location) {\n      setLocation(location)\n    }\n  };\n\n  return (\n    <div className=\"LocationChooser\">\n    <Form input={location} onSubmit={handleSubmit}/>\n    </div>\n  );\n}\n\nexport default LocationChooser;\n","const mockAstronomy = {\n    \"days\": [\n        {\n            \"astronomicalDawn\": \"2018-11-22T04:29:13+00:00\",\n            \"astronomicalDusk\": \"2018-11-22T16:43:25+00:00\",\n            \"civilDawn\": \"2018-11-22T06:07:58+00:00\",\n            \"civilDusk\": \"2018-11-22T15:04:39+00:00\",\n            \"moonFraction\": 0.9773405348657047,\n            \"moonPhase\": {\n                \"closest\": {\n                    \"text\": \"Full moon\",\n                    \"time\": \"2018-11-23T10:05:00+00:00\",\n                    \"value\": 0.5\n                },\n                \"current\": {\n                    \"text\": \"Waxing gibbous\",\n                    \"time\": \"2018-11-22T00:00:00+00:00\",\n                    \"value\": 0.45190179144442527\n                }\n            },\n            \"moonrise\": \"2018-11-22T13:58:41.948883+00:00\",\n            \"moonset\": \"2018-11-22T05:04:59.690726+00:00\",\n            \"nauticalDawn\": \"2018-11-22T05:17:04+00:00\",\n            \"nauticalDusk\": \"2018-11-22T15:55:34+00:00\",\n            \"sunrise\": \"2018-11-22T06:56:32+00:00\",\n            \"sunset\": \"2018-11-22T14:16:06+00:00\",\n            \"time\": \"2018-11-22T00:00:00+00:00\"\n        }\n    ],\n    \"meta\": {\n        \"cost\": 1,\n        \"dailyQuota\": 50,\n        \"lat\": 58.7984,\n        \"lng\": 17.8081,\n        \"requestCount\": 1,\n        \"start\": \"2018-11-22T00:00:00+00:00\"\n    }\n}\n\nexport default mockAstronomy\n","const mockWeather = {\"hours\":[{\"airTemperature\":[{\"source\":\"noaa\",\"value\":14.59}],\"cloudCover\":[{\"source\":\"noaa\",\"value\":100.0}],\"currentDirection\":[],\"currentSpeed\":[],\"gust\":[{\"source\":\"noaa\",\"value\":3.71}],\"humidity\":[{\"source\":\"noaa\",\"value\":85.17}],\"precipitation\":[{\"source\":\"noaa\",\"value\":0.06}],\"pressure\":[{\"source\":\"noaa\",\"value\":1024.84}],\"seaLevel\":[],\"swellDirection\":[{\"source\":\"noaa\",\"value\":124.05}],\"swellHeight\":[{\"source\":\"noaa\",\"value\":0.91}],\"swellPeriod\":[{\"source\":\"noaa\",\"value\":8.18}],\"time\":\"2019-10-29T23:00:00+00:00\",\"visibility\":[{\"source\":\"noaa\",\"value\":24.13}],\"waterTemperature\":[{\"source\":\"noaa\",\"value\":15.05}],\"waveDirection\":[{\"source\":\"noaa\",\"value\":104.36}],\"waveHeight\":[{\"source\":\"noaa\",\"value\":1.24}],\"wavePeriod\":[{\"source\":\"noaa\",\"value\":8.16}],\"windDirection\":[{\"source\":\"noaa\",\"value\":66.73}],\"windSpeed\":[{\"source\":\"noaa\",\"value\":2.07}],\"windWaveDirection\":[{\"source\":\"noaa\",\"value\":101.9}],\"windWaveHeight\":[{\"source\":\"noaa\",\"value\":1.36}],\"windWavePeriod\":[{\"source\":\"noaa\",\"value\":7.67}]}],\"meta\":{\"cost\":1,\"dailyQuota\":50,\"end\":\"2019-10-29 23:46\",\"lat\":40.7127281,\"lng\":-74.0060152,\"params\":[\"waterTemperature\",\"wavePeriod\",\"waveDirection\",\"waveDirection\",\"waveHeight\",\"windWaveDirection\",\"windWaveHeight\",\"windWavePeriod\",\"swellPeriod\",\"swellDirection\",\"swellHeight\",\"windSpeed\",\"windDirection\",\"airTemperature\",\"precipitation\",\"gust\",\"cloudCover\",\"humidity\",\"pressure\",\"visibility\",\"seaLevel\",\"currentSpeed\",\"currentDirection\"],\"requestCount\":12,\"source\":\"noaa\",\"start\":\"2019-10-29 23:00\"}}\n\nexport default mockWeather\n","const mockTide = {\n    \"extremas\": [\n        {\n            \"height\": \"1.18\",\n            \"time\": \"2019-03-15 03:40:44+00:00\",\n            \"type\": \"high\"\n        },\n        {\n            \"height\": \"0.60\",\n            \"time\": \"2019-03-15 09:53:54+00:00\",\n            \"type\": \"low\"\n        },\n        {\n            \"height\": \"1.20\",\n            \"time\": \"2019-03-15 16:23:29+00:00\",\n            \"type\": \"high\"\n        },\n        {\n            \"height\": \"0.61\",\n            \"time\": \"2019-03-15 22:39:15+00:00\",\n            \"type\": \"low\"\n        }\n    ],\n    \"meta\": {\n        \"cost\": 1,\n        \"dailyQuota\": 800,\n        \"end\": \"2019-03-16 00:00\",\n        \"lat\": 60.936,\n        \"lng\": 5.114,\n        \"requestCount\": 145,\n        \"start\": \"2019-03-15 00:00\",\n        \"station\": {\n            \"distance\": 61,\n            \"lat\": 60.398046,\n            \"lng\": 5.320487,\n            \"name\": \"bergen\",\n            \"source\": \"sehavniva.no\"\n        }\n    }\n}\n\nexport default mockTide\n","import mockAstronomy from './mock/astronomy.js'\nimport mockWeather from './mock/weather.js'\nimport mockTide from './mock/tide.js'\n\nconst fetchFromNetwork = false\n\nexport const fetchLatLong = async (location) => {\n  const encodedLocation = encodeURIComponent(location)\n  const response = await fetch(`https://api.opencagedata.com/geocode/v1/json?q=${encodedLocation}&key=${process.env.REACT_APP_OPEN_CAGE_KEY}`)\n    const json = await response.json();\n    return json.results[0].geometry\n  }\n\n  export const fetchAstronomy = async (lat, long) => {\n    if (fetchFromNetwork) {\n      const response = await fetch(`https://api.stormglass.io/v1/astronomy/point?lat=${lat}&lng=${long}&numberOfDays=1`, {\n        headers: {\n          'Authorization': process.env.REACT_APP_STORM_GLASS_KEY\n        }\n      })\n      const json = await response.json();\n      return json\n    } else {\n      return mockAstronomy\n    }\n  }\n\n  export const fetchTide = async (lat, long, now) => {\n    if (fetchFromNetwork) {\n      const response = await fetch(`https://api.stormglass.io/v1/tide/extremes/point?lat=${lat}&lng=${long}&start=${now}&end=${now}`, {\n        headers: {\n          'Authorization': process.env.REACT_APP_STORM_GLASS_KE\n        }\n      })\n      const json = await response.json();\n      return json\n    } else {\n      return mockTide\n    }\n  }\n\n  export const fetchWeather = async (lat, long, now) => {\n    if (fetchFromNetwork) {\n      const response = await fetch(`https://api.stormglass.io/v1/weather/point?lat=${lat}&lng=${long}&start=${now}&end=${now}&source=noaa`, {\n        headers: {\n          'Authorization': process.env.REACT_APP_STORM_GLASS_KEY\n        }\n      })\n\n      const json = await response.json();\n      return json.hours[0]\n    } else {\n      return mockWeather.hours[0]\n    }\n  }\n","import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Clock from './components/Clock.js'\nimport Temperature from './components/Temperature.js'\nimport Waves from './components/Waves.js'\nimport Wind from './components/Wind.js'\nimport Tides from './components/Tides.js'\nimport Daylength from './components/Daylength.js'\nimport LocationChooser from './components/location/LocationChooser.js'\nimport { fetchLatLong, fetchAstronomy, fetchTide, fetchWeather } from './services/api.js'\n\nfunction App() {\n  const [astronomy, setAstronomy] = useState();\n  const [weather, setWeather] = useState();\n  const [tide, setTide] = useState();\n\n  const handleLocationChange = location => {\n    const now = (new Date()).toISOString()\n    updateWeather(location, now)\n  };\n\n  const updateWeather = async (location, now) => {\n    const latLong = await fetchLatLong(location)\n\n    const astronomy = await fetchAstronomy(latLong.lat, latLong.lng)\n    setAstronomy({\n      sunrise: astronomy.days[0].sunrise,\n      sunset: astronomy.days[0].sunset\n    });\n\n    const tide = await fetchTide(latLong.lat, latLong.lng, now)\n    setTide({\n      extremas: tide.extremas\n    });\n\n    const weather = await fetchWeather(latLong.lat, latLong.lng, now)\n    setWeather({\n      airTemperature: weather.airTemperature[0].value, // Air temperature in degrees celsius\n      humidity: weather.humidity[0].value, // Relative humidity in percent\n      cloudCover: weather.cloudCover[0].value, // Total cloud coverage in percent\n      precipitation: weather.precipitation[0].value, // Mean precipitation in kg/m²\n      windDirection: weather.windDirection[0].value, // Direction of wind. 0° indicates wind coming from north\n      windSpeed: weather.windSpeed[0].value, // Speed of wind in meters per second\n      gust: weather.gust[0].value, // Wind gust in m/s\n      waterTemperature: weather.waterTemperature[0].value, // Water temperature in degrees celsius\n      waveDirection: weather.waveDirection[0].value, // Direction of combined wind and swell waves. 0° indicates waves coming from north\n      waveHeight: weather.waveHeight[0].value, // Height of combined wind and swell waves in meters\n      wavePeriod: weather.wavePeriod[0].value // Period of combined wind and swell waves in seconds\n    })\n  }\n\n  if (weather && astronomy && tide) {\n    return (\n      <div className=\"App\">\n        <LocationChooser onLocationChange={handleLocationChange}/>\n        <Clock/>\n        <Daylength sunrise={astronomy.sunrise} sunset={astronomy.sunset}/>\n        <Temperature airTemperature={weather.airTemperature}/>\n        <Wind windDirection={weather.windDirection} windSpeed={weather.windSpeed} gust={weather.gust}/>\n        <Waves waveDirection={weather.waveDirection} waveHeight={weather.waveHeight} wavePeriod={weather.wavePeriod}/>\n        <Tides waterTemperature={weather.waterTemperature} extremas={tide.extremas}/>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"App\">\n        <LocationChooser onLocationChange={handleLocationChange}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}